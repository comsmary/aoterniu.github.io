name: Build and Deploy Gmeek Blog

on:
  workflow_dispatch:
  issues:
    types: [opened, edited]
  schedule:
    - cron: "0 16 * * *"

jobs:
  build:
    name: Generate Blog
    runs-on: ubuntu-latest
    if: ${{ github.event.repository.owner.id == github.event.sender.id || github.event_name == 'schedule' }}
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Clone source code
        run: |
          GMEEK_VERSION=$(jq -r ".GMEEK_VERSION" config.json)
          git clone https://github.com/Meekdai/Gmeek.git ./Gmeek
          cd ./Gmeek
          lastTag=$(git describe --tags $(git rev-list --tags --max-count=1))
          if [ "$GMEEK_VERSION" = "last" ]; then
            git checkout $lastTag
          else
            git checkout $GMEEK_VERSION
          fi

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r ./Gmeek/requirements.txt

      - name: Generate HTML
        run: |
          cp -r ${{ github.workspace }}/* ./Gmeek/
          cd ./Gmeek
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          if [ -z "$ISSUE_NUMBER" ]; then
            python Gmeek.py ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }}
          else
            python Gmeek.py ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} --issue_number "$ISSUE_NUMBER"
          fi
          cp -a docs ${{ github.workspace }}/
          cp -a backup ${{ github.workspace }}/
          cp blogBase.json ${{ github.workspace }}/

      - name: Commit changes
        run: |
          git config --local user.email "$(jq -r '.email' config.json)"
          git config --local user.name "${{ github.repository_owner }}"
          git add .
          git commit -m "ðŸŽ‰ Auto update by Gmeek" || echo "No changes to commit"
          git push origin HEAD:main || echo "Nothing to push"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/'

  deploy:
    name: Deploy Blog
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
